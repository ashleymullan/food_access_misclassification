df_long$method_type == "beta1_mle" ~ "MLE",
df_long$method_type == "beta1_n" ~ "Naive"))
df <- df |>
#filter(abs(y) < 3) |>
mutate(method_type = factor(method_type,
levels = c("Naive", "Gold Standard",
"MLE", "Complete Case")),
n = factor(n, levels = c("390", "2200"),
labels = c("N = 390", "N = 2200")))
p <- df |> ggplot(aes(x = x, y = y)) +
geom_boxplot(aes(fill = method_type)) +
facet_wrap(vars(n)) +
theme_minimal() +
labs(x = xlab,
y = TeX("$\\hat{\\beta_1}$"),
title = "",
fill = "Method") +
scale_fill_colorblind() +
theme(legend.position = "top")
#add a reference line for all necessary cases (fixed prevalence ratio)
if(truth) {
print("made it here")
p <- p + geom_hline(yintercept = 0.2,
color = "magenta",
linetype = "dashed",
linewidth = 5)}
#little tweaks for specific axis labeling
#if(x_name == "q") {
#  df <- df |> mutate(q_labs = paste0(100 * q, "%"))
#  p <- p + scale_x_discrete(labels = unique(df$q_labs))}
#if(x_name == "b0") {p <- p + scale_x_discrete(labels = c('5%', '10%', '35%'))}
#if(x_name == "b1") {p <- p + scale_x_discrete(labels = c('1.1', '1.17', '1.25'))}
return(p)
}
#run the plots
vq_plot <- plot_base(vq_long, "q", "Query Percentage", truth = TRUE)
vq_plot
vq_long$beta1[1]
vq_long$beta1 |> str()
#define base plot function
plot_base <- function(df_long, x_name, xlab, truth = FALSE){
df <- data.frame(x = df_long |> pull(x_name) |> as.factor(),
y = df_long |> pull(betahat1),
n = df_long |> pull("N") |> as.character(),
method_type = case_when(
df_long$method_type == "beta1_gs" ~ "Gold Standard",
df_long$method_type == "beta1_cc" ~ "Complete Case",
df_long$method_type == "beta1_mle" ~ "MLE",
df_long$method_type == "beta1_n" ~ "Naive"))
df <- df |>
#filter(abs(y) < 3) |>
mutate(method_type = factor(method_type,
levels = c("Naive", "Gold Standard",
"MLE", "Complete Case")),
n = factor(n, levels = c("390", "2200"),
labels = c("N = 390", "N = 2200")))
p <- df |> ggplot(aes(x = x, y = y)) +
geom_boxplot(aes(fill = method_type)) +
facet_wrap(vars(n)) +
theme_minimal() +
labs(x = xlab,
y = TeX("$\\hat{\\beta_1}$"),
title = "",
fill = "Method") +
scale_fill_colorblind() +
theme(legend.position = "top")
#add a reference line for all necessary cases (fixed prevalence ratio)
if(truth) {
print("made it here")
yint = df$beta1[1]
p <- p + geom_hline(yintercept = yint,
color = "magenta",
linetype = "dashed",
linewidth = 5)}
#little tweaks for specific axis labeling
#if(x_name == "q") {
#  df <- df |> mutate(q_labs = paste0(100 * q, "%"))
#  p <- p + scale_x_discrete(labels = unique(df$q_labs))}
#if(x_name == "b0") {p <- p + scale_x_discrete(labels = c('5%', '10%', '35%'))}
#if(x_name == "b1") {p <- p + scale_x_discrete(labels = c('1.1', '1.17', '1.25'))}
return(p)
}
#run the plots
vq_plot <- plot_base(vq_long, "q", "Query Percentage", truth = TRUE)
vq_plot
#define base plot function
plot_base <- function(df_long, x_name, xlab, truth = FALSE){
df <- data.frame(x = df_long |> pull(x_name) |> as.factor(),
y = df_long |> pull(betahat1),
n = df_long |> pull("N") |> as.character(),
method_type = case_when(
df_long$method_type == "beta1_gs" ~ "Gold Standard",
df_long$method_type == "beta1_cc" ~ "Complete Case",
df_long$method_type == "beta1_mle" ~ "MLE",
df_long$method_type == "beta1_n" ~ "Naive"))
df <- df |>
#filter(abs(y) < 3) |>
mutate(method_type = factor(method_type,
levels = c("Naive", "Gold Standard",
"MLE", "Complete Case")),
n = factor(n, levels = c("390", "2200"),
labels = c("N = 390", "N = 2200")))
p <- df |> ggplot(aes(x = x, y = y)) +
geom_boxplot(aes(fill = method_type)) +
facet_wrap(vars(n)) +
theme_minimal() +
labs(x = xlab,
y = TeX("$\\hat{\\beta_1}$"),
title = "",
fill = "Method") +
scale_fill_colorblind() +
theme(legend.position = "top")
#add a reference line for all necessary cases (fixed prevalence ratio)
if(truth) {
print("made it here")
yint = df$beta1[1]
p <- p + geom_hline(yintercept = beta1,
color = "magenta",
linetype = "dashed",
linewidth = 5)}
#little tweaks for specific axis labeling
#if(x_name == "q") {
#  df <- df |> mutate(q_labs = paste0(100 * q, "%"))
#  p <- p + scale_x_discrete(labels = unique(df$q_labs))}
#if(x_name == "b0") {p <- p + scale_x_discrete(labels = c('5%', '10%', '35%'))}
#if(x_name == "b1") {p <- p + scale_x_discrete(labels = c('1.1', '1.17', '1.25'))}
return(p)
}
#run the plots
vq_plot <- plot_base(vq_long, "q", "Query Percentage", truth = TRUE)
#define base plot function
plot_base <- function(df_long, x_name, xlab, truth = FALSE){
df <- data.frame(x = df_long |> pull(x_name) |> as.factor(),
y = df_long |> pull(betahat1),
n = df_long |> pull("N") |> as.character(),
method_type = case_when(
df_long$method_type == "beta1_gs" ~ "Gold Standard",
df_long$method_type == "beta1_cc" ~ "Complete Case",
df_long$method_type == "beta1_mle" ~ "MLE",
df_long$method_type == "beta1_n" ~ "Naive"))
df <- df |>
#filter(abs(y) < 3) |>
mutate(method_type = factor(method_type,
levels = c("Naive", "Gold Standard",
"MLE", "Complete Case")),
n = factor(n, levels = c("390", "2200"),
labels = c("N = 390", "N = 2200")))
p <- df |> ggplot(aes(x = x, y = y)) +
geom_boxplot(aes(fill = method_type)) +
facet_wrap(vars(n)) +
theme_minimal() +
labs(x = xlab,
y = TeX("$\\hat{\\beta_1}$"),
title = "",
fill = "Method") +
scale_fill_colorblind() +
theme(legend.position = "top")
#add a reference line for all necessary cases (fixed prevalence ratio)
if(truth) {
print("made it here")
yint = df$beta1[1]
p <- p + geom_hline(yintercept = as.numeric(yint),
color = "magenta",
linetype = "dashed",
linewidth = 5)}
#little tweaks for specific axis labeling
#if(x_name == "q") {
#  df <- df |> mutate(q_labs = paste0(100 * q, "%"))
#  p <- p + scale_x_discrete(labels = unique(df$q_labs))}
#if(x_name == "b0") {p <- p + scale_x_discrete(labels = c('5%', '10%', '35%'))}
#if(x_name == "b1") {p <- p + scale_x_discrete(labels = c('1.1', '1.17', '1.25'))}
return(p)
}
#run the plots
vq_plot <- plot_base(vq_long, "q", "Query Percentage", truth = TRUE)
vq_plot
#define base plot function
plot_base <- function(df_long, x_name, xlab, truth = FALSE){
df <- data.frame(x = df_long |> pull(x_name) |> as.factor(),
y = df_long |> pull(betahat1),
n = df_long |> pull("N") |> as.character(),
method_type = case_when(
df_long$method_type == "beta1_gs" ~ "Gold Standard",
df_long$method_type == "beta1_cc" ~ "Complete Case",
df_long$method_type == "beta1_mle" ~ "MLE",
df_long$method_type == "beta1_n" ~ "Naive"))
df <- df |>
#filter(abs(y) < 3) |>
mutate(method_type = factor(method_type,
levels = c("Naive", "Gold Standard",
"MLE", "Complete Case")),
n = factor(n, levels = c("390", "2200"),
labels = c("N = 390", "N = 2200")))
p <- df |> ggplot(aes(x = x, y = y)) +
geom_boxplot(aes(fill = method_type)) +
facet_wrap(vars(n)) +
theme_minimal() +
labs(x = xlab,
y = TeX("$\\hat{\\beta_1}$"),
title = "",
fill = "Method") +
scale_fill_colorblind() +
theme(legend.position = "top")
#add a reference line for all necessary cases (fixed prevalence ratio)
#if(truth) {
#  print("made it here")
#  yint = df$beta1[1]
#  p <- p + geom_hline(yintercept = as.numeric(yint),
#                               color = "magenta",
#                               linetype = "dashed",
#                               linewidth = 5)}
#little tweaks for specific axis labeling
#if(x_name == "q") {
#  df <- df |> mutate(q_labs = paste0(100 * q, "%"))
#  p <- p + scale_x_discrete(labels = unique(df$q_labs))}
#if(x_name == "b0") {p <- p + scale_x_discrete(labels = c('5%', '10%', '35%'))}
#if(x_name == "b1") {p <- p + scale_x_discrete(labels = c('1.1', '1.17', '1.25'))}
return(p)
}
#run the plots
vq_plot <- plot_base(vq_long, "q", "Query Percentage", truth = TRUE)
#define base plot function
plot_base <- function(df_long, x_name, xlab, truth = FALSE){
df <- data.frame(x = df_long |> pull(x_name) |> as.factor(),
y = df_long |> pull(betahat1),
n = df_long |> pull("N") |> as.character(),
method_type = case_when(
df_long$method_type == "beta1_gs" ~ "Gold Standard",
df_long$method_type == "beta1_cc" ~ "Complete Case",
df_long$method_type == "beta1_mle" ~ "MLE",
df_long$method_type == "beta1_n" ~ "Naive"))
df <- df |>
#filter(abs(y) < 3) |>
mutate(method_type = factor(method_type,
levels = c("Naive", "Gold Standard",
"MLE", "Complete Case")),
n = factor(n, levels = c("390", "2200"),
labels = c("N = 390", "N = 2200")))
p <- df |> ggplot(aes(x = x, y = y)) +
geom_hline(yint = df$beta1[1], color = "magenta") +
geom_boxplot(aes(fill = method_type)) +
facet_wrap(vars(n)) +
theme_minimal() +
labs(x = xlab,
y = TeX("$\\hat{\\beta_1}$"),
title = "",
fill = "Method") +
scale_fill_colorblind() +
theme(legend.position = "top")
#add a reference line for all necessary cases (fixed prevalence ratio)
#if(truth) {
#  print("made it here")
#  yint = df$beta1[1]
#  p <- p + geom_hline(yintercept = as.numeric(yint),
#                               color = "magenta",
#                               linetype = "dashed",
#                               linewidth = 5)}
#little tweaks for specific axis labeling
#if(x_name == "q") {
#  df <- df |> mutate(q_labs = paste0(100 * q, "%"))
#  p <- p + scale_x_discrete(labels = unique(df$q_labs))}
#if(x_name == "b0") {p <- p + scale_x_discrete(labels = c('5%', '10%', '35%'))}
#if(x_name == "b1") {p <- p + scale_x_discrete(labels = c('1.1', '1.17', '1.25'))}
return(p)
}
#run the plots
vq_plot <- plot_base(vq_long, "q", "Query Percentage", truth = TRUE)
#define base plot function
plot_base <- function(df_long, x_name, xlab, truth = FALSE){
df <- data.frame(x = df_long |> pull(x_name) |> as.factor(),
y = df_long |> pull(betahat1),
n = df_long |> pull("N") |> as.character(),
method_type = case_when(
df_long$method_type == "beta1_gs" ~ "Gold Standard",
df_long$method_type == "beta1_cc" ~ "Complete Case",
df_long$method_type == "beta1_mle" ~ "MLE",
df_long$method_type == "beta1_n" ~ "Naive"))
df <- df |>
#filter(abs(y) < 3) |>
mutate(method_type = factor(method_type,
levels = c("Naive", "Gold Standard",
"MLE", "Complete Case")),
n = factor(n, levels = c("390", "2200"),
labels = c("N = 390", "N = 2200")))
p <- df |> ggplot(aes(x = x, y = y)) +
geom_hline(yintercept = df$beta1[1], color = "magenta") +
geom_boxplot(aes(fill = method_type)) +
facet_wrap(vars(n)) +
theme_minimal() +
labs(x = xlab,
y = TeX("$\\hat{\\beta_1}$"),
title = "",
fill = "Method") +
scale_fill_colorblind() +
theme(legend.position = "top")
#add a reference line for all necessary cases (fixed prevalence ratio)
#if(truth) {
#  print("made it here")
#  yint = df$beta1[1]
#  p <- p + geom_hline(yintercept = as.numeric(yint),
#                               color = "magenta",
#                               linetype = "dashed",
#                               linewidth = 5)}
#little tweaks for specific axis labeling
#if(x_name == "q") {
#  df <- df |> mutate(q_labs = paste0(100 * q, "%"))
#  p <- p + scale_x_discrete(labels = unique(df$q_labs))}
#if(x_name == "b0") {p <- p + scale_x_discrete(labels = c('5%', '10%', '35%'))}
#if(x_name == "b1") {p <- p + scale_x_discrete(labels = c('1.1', '1.17', '1.25'))}
return(p)
}
#run the plots
vq_plot <- plot_base(vq_long, "q", "Query Percentage", truth = TRUE)
results_list$q$beta1 |> head()
#define base plot function
plot_base <- function(df_long, x_name, xlab, truth = FALSE){
df <- data.frame(x = df_long |> pull(x_name) |> as.factor(),
y = df_long |> pull(betahat1),
n = df_long |> pull("N") |> as.character(),
method_type = case_when(
df_long$method_type == "beta1_gs" ~ "Gold Standard",
df_long$method_type == "beta1_cc" ~ "Complete Case",
df_long$method_type == "beta1_mle" ~ "MLE",
df_long$method_type == "beta1_n" ~ "Naive"))
df <- df |>
#filter(abs(y) < 3) |>
mutate(method_type = factor(method_type,
levels = c("Naive", "Gold Standard",
"MLE", "Complete Case")),
n = factor(n, levels = c("390", "2200"),
labels = c("N = 390", "N = 2200")))
p <- df |> ggplot(aes(x = x, y = y)) +
geom_hline(yintercept = 0.1765, color = "magenta") +
geom_boxplot(aes(fill = method_type)) +
facet_wrap(vars(n)) +
theme_minimal() +
labs(x = xlab,
y = TeX("$\\hat{\\beta_1}$"),
title = "",
fill = "Method") +
scale_fill_colorblind() +
theme(legend.position = "top")
#add a reference line for all necessary cases (fixed prevalence ratio)
#if(truth) {
#  print("made it here")
#  yint = df$beta1[1]
#  p <- p + geom_hline(yintercept = as.numeric(yint),
#                               color = "magenta",
#                               linetype = "dashed",
#                               linewidth = 5)}
#little tweaks for specific axis labeling
#if(x_name == "q") {
#  df <- df |> mutate(q_labs = paste0(100 * q, "%"))
#  p <- p + scale_x_discrete(labels = unique(df$q_labs))}
#if(x_name == "b0") {p <- p + scale_x_discrete(labels = c('5%', '10%', '35%'))}
#if(x_name == "b1") {p <- p + scale_x_discrete(labels = c('1.1', '1.17', '1.25'))}
return(p)
}
#run the plots
vq_plot <- plot_base(vq_long, "q", "Query Percentage", truth = TRUE)
vq_plot
vppv_plot <- plot_base(vppv_long, "ppv", "Error Setting", FALSE)
vppv_plot
vppv_plot <- plot_base(vppv_long, "ppv", "Positive Predictive Value", FALSE)
vppv_plot
#Load libraries
library(tidyverse)
library(kableExtra)
#Set working directory
##replace local_string with where you keep your github repo directory
local_string <- "/Users/ashleymullan/Documents/Food-Access/"
repo_string <- "food_access_misclassification/accre-sims/"
setwd(paste0(local_string, repo_string))
#Create list of sim results
base <- "one-sided-vary-"
extension <- ".csv"
num_variations <- 2 #change me as I run more sims
varied <- c("ppv", "q") #change me as I run more sims
files <- rep(NA, times = num_variations)
for(i in 1:num_variations){
files[i] <- paste0(base, varied[i], extension)
}
results_list <- list(ppv = read.csv(files[1]),
q = read.csv(files[2]))
#compute coverage proportion
cp = function(est, se, truth) {
mean((est - 1.96 * se) <= truth & truth <= (est + 1.96 * se))
}
#function to create summary table
## args:
### results_df is the data frame storing the results from the sim settings of interest
### varied_var is the name of the variable you're varying
beta1_summary <- function(results_df, varied_var){
results_df |>
select(-c(mle_msg, sim_msg)) |>
drop_na() |>
group_by(N, {{varied_var}}) |>
summarize(bias_gs = mean((beta1_gs - beta1) / beta1), ese_gs = sd(beta1_gs),
bias_n = mean((beta1_n - beta1) / beta1), ese_n = sd(beta1_n),
bias_cc = mean((beta1_cc - beta1) / beta1), ese_cc = sd(beta1_cc),
bias_mle = mean((beta1_mle - beta1) / beta1), ese_mle = sd(beta1_mle),
ase_mle = mean(se_beta1_mle),
cp_mle = cp(est = beta1_mle, se = se_beta1_mle, truth = beta1)
) |>
dplyr::mutate(re_cc = (ese_gs ^ 2) / (ese_cc ^ 2),
re_mle = (ese_gs ^ 2) / (ese_mle ^ 2))
}
#test for varied ppv
results_list$ppv |> nrow() #10K replicates
results_list$ppv |>
select(-c(mle_msg, sim_msg)) |>
drop_na() |>
nrow() #9976 reps (24 dropped)
results_list$ppv |>
beta1_summary(ppv) |>
round(digits = 4) |> View()
#test for varied q
results_list$q |> nrow() #8K replicates
results_list$q |>
select(-c(mle_msg, sim_msg)) |>
drop_na() |>
nrow() #8000 reps (0 dropped)
results_list$q |>
beta1_summary(q) |>
round(digits = 4) |> View()
#test for varied prevalence
#results_list$prevalence |> nrow() #8K replicates
#results_list$prevalence |>
#  select(-c(mle_msg, sim_msg)) |> #get rid of columns that we don't care about NA
#  drop_na() |> nrow() #7997 reps (3 dropped)
#results_list$prevalence |>
#  beta1_summary(beta0) |>
#  round(digits = 4) |> View()
#test for varied PR
# results_list$pr |> nrow() #10K replicates
# results_list$pr |>
#  select(-c(mle_msg, sim_msg)) |>
#  drop_na() |>
#  nrow() #7995 reps (5 dropped)
# results_list$pr |>
#  beta1_summary(beta1) |>
#  round(digits = 4) |> View()
##ASHLEY DEAL WITH LATER
#function to format numbers for LaTeX
format_num = function(num, digits = 3) {
paste0("$", format(round(num, 3), nsmall = digits), "$")
}
## Format for LaTeX
# full_result_summary = full_result_summary |>
#  mutate_at(.vars = 2:18, .funs = format_num, digits = 3) |>
#  mutate_at(.vars = 2:4, .funs = format_num, digits = 2)
#change col names
# colnames(full_result_summary) = c("$\\pmb{N}$", "$\\pmb{Q}$",
#                                  "FPR", "TPR",
#                                  "\\pmb{\\beta_0}", "\\pmb{\\beta_1}",
#                                  rep(c("Bias", "ESE"), times = 4),
#                                  "ASE","CP", "RE", "RE")
#GGNNCCMM MMCM
#full_result_summary |>
#  kable(format = "latex",
#        booktabs = TRUE,
#        escape = FALSE,
#        align = "cccccccccccccccccc") |>
#  kable_styling() |>
#  add_header_above(header = c(" " = 6, "Gold Standard" = 2,
#                              "Naive" = 2, "Complete Case" = 2,
#                              "MLE" = 4, "Complete Case" = 1, "MLE" = 1),
#                   bold = TRUE) |>
#  row_spec(row = 0, bold = TRUE)
## And a \multicolumn used to separate the three parameters
results_list$ppv |>
beta1_summary(ppv) |>
select(ese_mle, ase_mle, N, ppv) |>
round(digits = 5) |> View()
results_list$q |>
beta1_summary(q) |>
round(digits = 5) |>
select(ese_mle, ase_mle, N, q) |>
View()
sal <- read.csv("salary.csv")
library(dplyr)
library(ggplot2)
library(rms)
library(estimatr)
library(rstanarm)
library(broom)
library(broom.mixed)
library(kableExtra)
sal <- sal |> #originally 19,792 rows and 12 cols
dplyr::select(-X) |> #that extra X column drives me mildly insane
dplyr::filter(year == 95) #now 1,597 rows and 11 cols
s1 <- summaryM(salary + sex + yrdeg ~ 1, data = sal)
html(s1, prmsd=TRUE, digits=2)
p
p
cap1 <- "For both sexes, salary is right skewed."
cap2 <- "Male salaries have a notably higher median and wider spread."
sal |>
ggplot(aes(x = salary, fill = sex)) +
geom_boxplot() +
scale_fill_manual(values = c("#fd3db5","#7eb201")) +
labs(x = "Monthly Salary (USD)", fill = "Sex",
title = "Does sex affect salary?",
caption = paste0(cap1, " ", cap2)) +
theme_classic() +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line.y.left = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
legend.position = "bottom",
plot.margin = unit(c(5,5,5,5),"mm"))
